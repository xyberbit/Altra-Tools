diff --git a/Silicon/Ampere/AmpereAltraPkg/Library/PciSegmentLibPci/PciSegmentLib.c b/Silicon/Ampere/AmpereAltraPkg/Library/PciSegmentLibPci/PciSegmentLib.c
index 898558db8d..1eab1b56d2 100644
--- a/Silicon/Ampere/AmpereAltraPkg/Library/PciSegmentLibPci/PciSegmentLib.c
+++ b/Silicon/Ampere/AmpereAltraPkg/Library/PciSegmentLibPci/PciSegmentLib.c
@@ -54,6 +54,31 @@
 **/
 #define PCI_SEGMENT_TO_PCI_ADDRESS(A) ((UINTN)(UINT32)A)
 
+/**
+  Validate a node from config address.
+**/
+STATIC UINT8 PciNodeCheck (UINT64 CfgBase)
+{
+  UINT8 Bus = GET_BUS_NUM (CfgBase);
+
+  CfgBase &= 0xFFFFF0000000; // BDF 00:00.0 RC host base
+
+  for (int i = 1; i <= 8; i++) { // max 8 RC ports per segment
+
+    CfgBase += (1ULL << 15); // BDF 00:i.0 RC port base
+    if (MmioRead32 (CfgBase) == 0xFFFFFFFF) continue; // invalid vid/did
+
+    UINT8 SecBus = MmioRead32 (CfgBase + 0x18) >> 8;
+    if (SecBus == Bus) { // child of RC
+      DEBUG((DEBUG_INFO, "  Node CK: Invalid\n"));
+      return 1;
+    }
+  }
+
+  DEBUG((DEBUG_INFO, "  Node CK: Valid\n"));
+  return 0;
+}
+
 /**
   Get the MCFG Base address from the segment number.
 **/
@@ -540,6 +565,7 @@ PciSegmentRead16 (
       if (HeaderType != 0) {
         PrimaryBus = MmioRead32 (CfgBase + PRIMARY_BUS_NUMBER_REG);
         DEBUG ((DEBUG_INFO, "  Peek RD: PrimaryBus=0x%02X\n", PrimaryBus));
+        if (PrimaryBus) PrimaryBus = PciNodeCheck (CfgBase);
       }
 
       if ((HeaderType == 0) || (PrimaryBus != 0)) {
@@ -973,6 +999,7 @@ PciSegmentRead32 (
       if (HeaderType != 0) {
         PrimaryBus = MmioRead32 (CfgBase + PRIMARY_BUS_NUMBER_REG);
         DEBUG ((DEBUG_INFO, "  Peek RD: PrimaryBus=0x%02X\n", PrimaryBus));
+        if (PrimaryBus) PrimaryBus = PciNodeCheck (CfgBase);
       }
 
       if ((HeaderType == 0) || (PrimaryBus != 0)) {
